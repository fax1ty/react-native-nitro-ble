///
/// HybridBluetoothDeviceSpec.cpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#include "HybridBluetoothDeviceSpec.hpp"

namespace margelo::nitro::bluetooth {

  void HybridBluetoothDeviceSpec::loadHybridMethods() {
    // load base methods/properties
    HybridObject::loadHybridMethods();
    // load custom methods/properties
    registerHybrids(this, [](Prototype& prototype) {
      prototype.registerHybridGetter("address", &HybridBluetoothDeviceSpec::getAddress);
      prototype.registerHybridGetter("knownName", &HybridBluetoothDeviceSpec::getKnownName);
      prototype.registerHybridGetter("state", &HybridBluetoothDeviceSpec::getState);
      prototype.registerHybridMethod("connect", &HybridBluetoothDeviceSpec::connect);
      prototype.registerHybridMethod("disconnect", &HybridBluetoothDeviceSpec::disconnect);
      prototype.registerHybridMethod("service", &HybridBluetoothDeviceSpec::service);
    });
  }

} // namespace margelo::nitro::bluetooth
