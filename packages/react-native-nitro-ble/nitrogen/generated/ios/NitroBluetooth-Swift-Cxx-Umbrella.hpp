///
/// NitroBluetooth-Swift-Cxx-Umbrella.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#pragma once

// Forward declarations of C++ defined types
// Forward declaration of `AdapterState` to properly resolve imports.
namespace margelo::nitro::bluetooth { enum class AdapterState; }
// Forward declaration of `ArrayBuffer` to properly resolve imports.
namespace NitroModules { class ArrayBuffer; }
// Forward declaration of `BluetoothDeviceState` to properly resolve imports.
namespace margelo::nitro::bluetooth { enum class BluetoothDeviceState; }
// Forward declaration of `HybridBluetoothDeviceServiceCharacteristicSpec` to properly resolve imports.
namespace margelo::nitro::bluetooth { class HybridBluetoothDeviceServiceCharacteristicSpec; }
// Forward declaration of `HybridBluetoothDeviceServiceSpec` to properly resolve imports.
namespace margelo::nitro::bluetooth { class HybridBluetoothDeviceServiceSpec; }
// Forward declaration of `HybridBluetoothDeviceSpec` to properly resolve imports.
namespace margelo::nitro::bluetooth { class HybridBluetoothDeviceSpec; }
// Forward declaration of `HybridBluetoothSpec` to properly resolve imports.
namespace margelo::nitro::bluetooth { class HybridBluetoothSpec; }
// Forward declaration of `HybridScanHandleSpec` to properly resolve imports.
namespace margelo::nitro::bluetooth { class HybridScanHandleSpec; }

// Include C++ defined types
#include "AdapterState.hpp"
#include "BluetoothDeviceState.hpp"
#include "HybridBluetoothDeviceServiceCharacteristicSpec.hpp"
#include "HybridBluetoothDeviceServiceSpec.hpp"
#include "HybridBluetoothDeviceSpec.hpp"
#include "HybridBluetoothSpec.hpp"
#include "HybridScanHandleSpec.hpp"
#include <NitroModules/ArrayBuffer.hpp>
#include <NitroModules/Promise.hpp>
#include <NitroModules/Result.hpp>
#include <exception>
#include <functional>
#include <memory>
#include <string>
#include <vector>

// C++ helpers for Swift
#include "NitroBluetooth-Swift-Cxx-Bridge.hpp"

// Common C++ types used in Swift
#include <NitroModules/ArrayBufferHolder.hpp>
#include <NitroModules/AnyMapUtils.hpp>
#include <NitroModules/RuntimeError.hpp>
#include <NitroModules/DateToChronoDate.hpp>

// Forward declarations of Swift defined types
// Forward declaration of `HybridBluetoothDeviceServiceCharacteristicSpec_cxx` to properly resolve imports.
namespace NitroBluetooth { class HybridBluetoothDeviceServiceCharacteristicSpec_cxx; }
// Forward declaration of `HybridBluetoothDeviceServiceSpec_cxx` to properly resolve imports.
namespace NitroBluetooth { class HybridBluetoothDeviceServiceSpec_cxx; }
// Forward declaration of `HybridBluetoothDeviceSpec_cxx` to properly resolve imports.
namespace NitroBluetooth { class HybridBluetoothDeviceSpec_cxx; }
// Forward declaration of `HybridBluetoothSpec_cxx` to properly resolve imports.
namespace NitroBluetooth { class HybridBluetoothSpec_cxx; }
// Forward declaration of `HybridScanHandleSpec_cxx` to properly resolve imports.
namespace NitroBluetooth { class HybridScanHandleSpec_cxx; }

// Include Swift defined types
#if __has_include("NitroBluetooth-Swift.h")
// This header is generated by Xcode/Swift on every app build.
// If it cannot be found, make sure the Swift module's name (= podspec name) is actually "NitroBluetooth".
#include "NitroBluetooth-Swift.h"
// Same as above, but used when building with frameworks (`use_frameworks`)
#elif __has_include(<NitroBluetooth/NitroBluetooth-Swift.h>)
#include <NitroBluetooth/NitroBluetooth-Swift.h>
#else
#error NitroBluetooth's autogenerated Swift header cannot be found! Make sure the Swift module's name (= podspec name) is actually "NitroBluetooth", and try building the app first.
#endif
