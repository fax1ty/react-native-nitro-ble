///
/// AdapterState.swift
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

/**
 * Represents the JS union `AdapterState`, backed by a C++ enum.
 */
public typealias AdapterState = margelo.nitro.bluetooth.AdapterState

public extension AdapterState {
  /**
   * Get a AdapterState for the given String value, or
   * return `nil` if the given value was invalid/unknown.
   */
  init?(fromString string: String) {
    switch string {
      case "disabled":
        self = .disabled
      case "turning-on":
        self = .turningOn
      case "enabled":
        self = .enabled
      case "turning-off":
        self = .turningOff
      default:
        return nil
    }
  }

  /**
   * Get the String value this AdapterState represents.
   */
  var stringValue: String {
    switch self {
      case .disabled:
        return "disabled"
      case .turningOn:
        return "turning-on"
      case .enabled:
        return "enabled"
      case .turningOff:
        return "turning-off"
    }
  }
}
